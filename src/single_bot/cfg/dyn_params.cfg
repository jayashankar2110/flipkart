#!/usr/bin/env python3
PACKAGE = "single_bot"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
gen.add("loop_delay", double_t, 0, "used in action server",    0.01, 0,1)
# gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
gen.add("start_navigation",   bool_t,   0, "Turn on to start navigation",  False)
gen.add("yaw_p",double_t,0,"Proportional gain of yaw", 1.2,0.0,5)
gen.add("yaw_rp",double_t,0,"Integral gain of yaw", 0.001,0.0,5)  #k1 = k2^2/4 for critical damp decrease k2 for underdamped
gen.add("yaw_i",double_t,0,"Derivative gain of yaw", 0.001,0.0,5)


gen.add("vel_p",double_t,0,"Proptional gain of velocity", 0.001,0.0,1)
gen.add("vel_d",double_t,0,"D gain of velocity", 0.001,0.0,1)
gen.add("vel_i",double_t,0,"I gain of velocity", 0.001,0.0,1)

gen.add("pos_p",double_t,0,"Proptional gain of velocity", 0.001,0.0,1)
gen.add("pos_d",double_t,0,"D gain of velocity", 0.001,0.0,1)
gen.add("pos_i",double_t,0,"I gain of velocity", 0.001,0.0,1)






# size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                        gen.const("Medium",     int_t, 1, "A medium constant"),
#                        gen.const("Large",      int_t, 2, "A large constant"),
#                        gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                      "An enum to set size")

# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "dyn_params", "navigation"))